<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
	<script src="../../external/jquery.min.js"></script>
	<script src="../../external/bmoor.min.js" root="../../src"></script>
	<script src="../../src/snap/service/Abstract.js"></script>
	<script src="../../src/snap/node/List.js"></script>

	<script>
		(function( global ){

			var lowData = [{
					description : 'derp',
					key     : 1,
					label   : 1,
					display : 2,
					eins    : 5,
					zwei    : 4
				}, {
					description : 'derp2',
					key     : 2,
					label   : 3,
					display : 4,
					eins    : 2,
					zwei    : 3
				}];
		

			bMoor.constructor.singleton({
				name : 'Service',
				namespace : [ 'test' ],
				parent : [ 'snap','service','Abstract' ],
				properties : {
					_create : 'http://create/:label/description?blar=:display&asdsdas=asdads',
					_update : 'http://update/:description/:label?blar=:display',
					_remove : 'http://remove/'
				}
			});

			bMoor.constructor.define({
				name : 'Controller',
				namespace : [ 'test' ],
				parent : [ 'snap','controller','Abstract' ],
				services : { 'test' : ['test','Service'] },
				controller : {
					className : 'woot',
					actions : {
						'click' : {
							'.row-add' : function( event, controller ){
								controller.addRow();
							}
						}
					}
				},
				properties : {
					addRow : function(){
						this.observer.model.push({
							sum : function(){ return parseInt(this.eins) + parseInt(this.zwei); },
							description : 'sample1',
							label   : 'sample2',
							display : 'sample3',
							eins    : 1,
							zwei    : 2
						});
					},
					_key : 'key',
					_model : function(){
						var 
							i,
							c;

						for( i = 0, c = lowData.length; i < c; i++ ){
							lowData[ i ].sum = function(){ return parseInt(this.eins) + parseInt(this.zwei); };
						}
						return lowData;
					},
					_sendCreate : function( data ){
						this._.test.create( data );
					},
					_sendUpdate : function( data ){
						this._.test.update( data );
					},
					_sendRemove : function( data ){
						this._.test.remove( data );
					}
				}
			});
		}( this ));
	</script>
</head>
<body snap-controller="test.Controller">
	<table snap-node="snap.node.List" snap-mount="mount" snap-template="temp">
		<tbody>
			<tr>
				<th>Yay</th>
				<th>Description</th>
	            <th>Label</th>
	            <th>Display</th>
	            <th>Eins</th>
	            <th>Zwei</th>
	            <th>&nbsp;</th>
        	</tr>
        </tbody>
	</table>
	<button class='row-add'> Add Row </button>
	<script id='temp' type='text/html'>
		<td><span snap-node='snap.node.Text' type='text' snap-scope="sum"></span></td>
		<td><input snap-node='snap.node.input.Text' type='text' name='description'/></td>
        <td><input snap-node='snap.node.input.Text' type='text' name='label'/></td>
        <td><input snap-node='snap.node.input.Text' type='text' name='display'/></td>
        <td><input snap-node='snap.node.input.Text' type='text' name='eins'/></td>
        <td><input snap-node='snap.node.input.Text' type='text' name='zwei'/></td>
        <td><button snap-node='snap.node.input.Button' type='button' snap-variable='_.remove' name='remove' value="1">Remove</button></td>
	</script>
</body>

</html>
